set nocompatible

call plug#begin()
{% for plugin in vim.plugins %}
Plug '{{ plugin.split('/')[3] }}/{{ plugin.split('/')[4] }}'
{% endfor %}
call plug#end()

let g:airline_powerline_fonts = 1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:ansible_unindent_after_newline = 1
let g:ansible_extra_syntaxes = "sh.vim ruby.vim"
let g:ansible_attribute_highlight = "ob"
let g:ansible_name_highlight = 'd'
let g:ansible_extra_keywords_highlight = 1
let g:ansible_normal_keywords_highlight = 'Constant'
let g:ansible_with_keywords_highlight = 'Constant'

let g:syntastic_javascript_checkers = ['eslint']

let g:go_fmt_command = "goimports"

map ; :Files<CR>

colorscheme {{ vim.colorscheme }}

syntax on
filetype plugin indent on

set number
set noshowmode
set nowrap
set backspace=2
set fileencodings=utf-8,latin2

set ts=4 sw=4 expandtab smarttab

autocmd FileType yaml setlocal ts=2 sw=2
autocmd FileType yml setlocal ts=2 sw=2
autocmd FileType make setlocal ts=2 sw=2 noexpandtab

if &term == "xterm"
  set t_Co=256
endif
